{"version":3,"sources":["../../../../assets/Script/assets/Script/Logger.js"],"names":["logLevel","TRACE","DEBUG","INFO","WARN","ERROR","logLevelDesc","logLevelMethod","_logLevel","GameLog","level","cc","log","name","_tag","msg","args","content","_format","_log","info","warn","error","method","ccNativeBridge","require","result","length","obj","key","reg","RegExp","hasOwnProperty","replace","i","undefined","module","exports","LEVEL","getLogger"],"mappings":"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","file":"Logger.js","sourceRoot":"../../../../assets/Script","sourcesContent":["'use strict';\n\n/**\n * 日志级别\n * @type {{TRACE: number, DEBUG: number, INFO: number, WARN: number, ERROR: number}}\n */\nconst logLevel = {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n};\n\n/**\n * logLevelDesc\n * @type {{}}\n */\nconst logLevelDesc = {\n    [logLevel.TRACE]: 'TRACE',\n    [logLevel.DEBUG]: 'DEBUG',\n    [logLevel.INFO]: 'INFO',\n    [logLevel.WARN]: 'WARN',\n    [logLevel.ERROR]: 'ERROR'\n};\n\n/**\n * logLevelMethod\n * @type {{}}\n */\nconst logLevelMethod = {\n    [logLevel.TRACE]: 'logTrace',\n    [logLevel.DEBUG]: 'logDebug',\n    [logLevel.INFO]: 'logInfo',\n    [logLevel.WARN]: 'LogWarn',\n    [logLevel.ERROR]: 'logError'\n};\n\n/**\n * _logLevel\n * @type {number}\n * @private\n */\nlet _logLevel = logLevel.INFO;\n\n/**\n * GameLog 应用日志\n *\n * @example\n * const logger = require('logger').getLogger('Logger.js');\n * logger.info('test1');\n * logger.info('test2,{1},{0}',123,456);\n * logger.info('test3,{0}','abc');\n * logger.info('test4,{0},{1}','abc',123);\n * logger.info('test5,{name},{age}',{'name':'abc','age':23});\n */\nclass GameLog\n{\n    /**\n     * logLevel 默认情况，debug下打印debug及以上级别日志，release下打印info及以上级别日志\n     * @param {number} level\n     */\n    static logLevel(level){\n        cc.log(`Logger.js - log level: ${logLevelDesc[level]}`);\n        _logLevel = level;\n    }\n\n    set logLevel(level){\n        this._logLevel = level;\n    }\n\n    get logLevel(){\n        return this._logLevel;\n    }\n\n    /**\n     * constructor\n     * @param {string} name \n     */\n    constructor(name,level){\n        this._logLevel = level || _logLevel;\n        this._tag = name || '';\n    }\n\n    /**\n     * 获取日志文件名\n     * @returns {string}\n     */\n    getLogName(){\n        // TODO:\n        return 'log_name';\n    }\n\n    /**\n     * 读取所有日志内容\n     * @returns {string}\n     */\n    readLog(){\n        // TODO:\n        return 'log content';\n    }\n\n    /**\n     * log 只会写到控制台不会写到日志文件\n     * @param msg\n     * @param args\n     */\n    log(msg,...args){\n        const content = this._format(msg,...args);\n        cc.log(`${this._tag} - ${content}`);\n    }\n\n    /**\n     * trace级别日志，会根据logLevel是否写到日志文件\n     * @param msg\n     * @param args\n     */\n    trace(msg,...args){\n        const content = this._format(msg,...args);\n        cc.log(`${this._tag} - ${content}`);\n        this._log(logLevel.TRACE,content);\n    }\n\n    /**\n     * debug级别日志，会根据logLevel是否写到日志文件\n     * @param msg\n     * @param args\n     */\n    debug(msg,...args){\n        const content = this._format(msg,...args);\n        cc.log(`${this._tag} - ${content}`);\n        this._log(logLevel.DEBUG,content);\n    }\n\n    /**\n     * info级别日志，会根据logLevel是否写到日志文件\n     * @param msg\n     * @param args\n     */\n    info(msg,...args){\n        const content = this._format(msg,...args);\n        cc.info(`${this._tag} - ${content}`);\n        this._log(logLevel.INFO,content);\n    }\n\n    /**\n     * warn级别日志，会根据logLevel是否写到日志文件\n     * @param msg\n     * @param args\n     */\n    warn(msg,...args){\n        const content = this._format(msg,...args);\n        cc.warn(`${this._tag} - ${content}`);\n        this._log(logLevel.WARN,content);\n    }\n\n    /**\n     * error级别日志，会根据logLevel是否写到日志文件\n     * @param msg\n     * @param args\n     */\n    error(msg,...args){\n        const content = this._format(msg,...args);\n        cc.error(`${this._tag} - ${content}`);\n        this._log(logLevel.ERROR,content);\n    }\n\n    /**\n     * _log\n     * @param {number} level\n     * @param {string} info\n     * @private\n     */\n    _log(level,info){\n        if(level >= this._logLevel){\n            /// 转入Native处理\n            let method = logLevelMethod[level];\n            const ccNativeBridge = require('CCNativeBridge');\n            // ccNativeBridge.invokeNativeMethod('LogHandler', method, `${this._tag} - ${info}`);\n        }\n    }\n\n    /**\n     * _format\n     * @param {string} msg\n     * @param {...} args\n     * @returns {string}\n     * @private\n     */\n    _format (msg,...args) {\n        let result = msg + '';\n        if (args.length > 0) {\n            if (args.length === 1 && typeof (args[0]) === 'object') {\n                const obj = args[0];\n                for (let key in obj) {\n                    const reg = new RegExp('({' + key + '})','g');\n                    if(obj.hasOwnProperty(key)) {\n                        result = result.replace(reg, obj[key]);\n                    }\n                }\n            } else {\n                for (let i = 0; i < args.length; i++) {\n                    if (args[i] !== undefined) {\n                        const reg = new RegExp('({)' + i + '(})', 'g');\n                        result = result.replace(reg, args[i]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\n\nmodule.exports = {\n    /**\n     * 日志级别\n     */\n    LEVEL: logLevel,\n    /**\n     * get logger\n     * @param {*} name\n     * @returns {GameLog}\n     */\n    getLogger: function(name, level){\n        return new GameLog(name,level);\n    },\n\n    /**\n     * set log level\n     * @param {number} level\n     */\n    logLevel: function(level){\n        GameLog.logLevel(level);\n    }\n};"]}